{"ast":null,"code":"var _jsxFileName = \"C:\\\\git\\\\matt-repository\\\\security-system\\\\squadra\\\\template-reactjs\\\\src\\\\components\\\\common\\\\GenericRegister.js\";\nimport React from \"react\";\nimport { Row, Col, Button, Form, FormInput, FormSelect, FormCheckbox, FormRadio, FormTextarea, DatePicker } from \"shards-react\";\nimport pt from 'date-fns/locale/pt';\nimport { registerLocale, setDefaultLocale } from \"react-datepicker\";\nexport default class GenericRegister extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputs: {\n        input: this.formInput.bind(this),\n        textarea: this.formTextarea.bind(this),\n        select: this.formSelect.bind(this),\n        datepicker: this.formDatePicker.bind(this),\n        checkbox: this.formCheckbox.bind(this),\n        radio: this.formRadio.bind(this)\n      }\n    };\n    registerLocale('pt', pt);\n    setDefaultLocale('pt');\n  }\n\n  formInput(input, key) {\n    if (!input.hide) {\n      return /*#__PURE__*/React.createElement(Col, {\n        key: key,\n        sm: input.sm || \"12\",\n        md: input.md || \"12\",\n        lg: input.lg || \"12\",\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }\n      }, input.label && /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: key,\n        style: input.labelStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }\n      }, input.label, input.required && /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: \"red\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 61\n        }\n      }, \"*\")), /*#__PURE__*/React.createElement(FormInput, {\n        id: key,\n        valid: input.valid,\n        invalid: input.invalid,\n        required: input.required,\n        disabled: input.disabled,\n        placeholder: input.placeholder,\n        className: input.className,\n        style: input.inputStyle,\n        type: input.type || \"text\",\n        value: input.value,\n        onChange: e => this.props.onInputChange(e.target.value, key),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }\n      }));\n    }\n  }\n\n  formTextarea(input, key) {\n    if (!input.hide) {\n      return /*#__PURE__*/React.createElement(Col, {\n        key: key,\n        sm: input.sm || \"12\",\n        md: input.md || \"12\",\n        lg: input.lg || \"12\",\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }\n      }, input.label && /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: key,\n        style: input.labelStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }\n      }, input.label, input.required && /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: \"red\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 61\n        }\n      }, \"*\")), /*#__PURE__*/React.createElement(FormTextarea, {\n        id: key,\n        valid: input.valid,\n        invalid: input.invalid,\n        required: input.required,\n        disabled: input.disabled,\n        placeholder: input.placeholder,\n        className: input.className,\n        style: input.inputStyle,\n        rows: input.rows,\n        cols: input.cols,\n        maxLength: input.maxLength,\n        value: input.value,\n        onChange: e => this.props.onInputChange(e.target.value, key),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }\n      }));\n    }\n  }\n\n  formSelect(input, key) {\n    if (!input.hide) {\n      return /*#__PURE__*/React.createElement(Col, {\n        key: key,\n        sm: input.sm || \"12\",\n        md: input.md || \"12\",\n        lg: input.lg || \"12\",\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }\n      }, input.label && /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: key,\n        style: input.labelStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }\n      }, input.label, input.required && /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: \"red\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 61\n        }\n      }, \"*\")), /*#__PURE__*/React.createElement(FormSelect, {\n        id: key,\n        valid: input.valid,\n        invalid: input.invalid,\n        required: input.required,\n        disabled: input.disabled,\n        placeholder: input.placeholder,\n        className: input.className,\n        style: input.inputStyle,\n        value: input.value,\n        onChange: e => this.props.onInputChange(e.target.value, key),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }\n      }, \"Selecione\"), input.options.map((o, idx2) => /*#__PURE__*/React.createElement(\"option\", {\n        key: idx2,\n        value: o.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 29\n        }\n      }, o.label))));\n    }\n  }\n\n  formDatePicker(input, key) {\n    if (!input.hide) {\n      return /*#__PURE__*/React.createElement(Col, {\n        key: key,\n        sm: input.sm || \"12\",\n        md: input.md || \"12\",\n        lg: input.lg || \"12\",\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }\n      }, input.label && /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: key,\n        style: input.labelStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }\n      }, input.label, input.required && /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: \"red\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 61\n        }\n      }, \"*\")), /*#__PURE__*/React.createElement(DatePicker, {\n        id: key,\n        className: input.className,\n        style: input.inputStyle,\n        required: input.required,\n        disabled: input.disabled,\n        showYearDropdown: input.showYearDropdown,\n        showMonthDropdown: input.showMonthDropdown,\n        showTimeSelect: input.showTimeSelect,\n        dateFormat: input.dateFormat || \"dd/MM/yyyy\",\n        timeFormat: input.timeFormat || \"HH:mm\",\n        timeIntervals: input.timeIntervals || 30,\n        timeCaption: input.timeCaption || \"HorÃ¡rio\",\n        minDate: input.minDate,\n        maxDate: input.maxDate,\n        selected: input.value,\n        onChange: date => this.props.onInputChange(date, key),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }\n      }));\n    }\n  }\n\n  formCheckbox(input, key) {\n    if (!input.hide) {\n      return /*#__PURE__*/React.createElement(Col, {\n        key: key,\n        sm: input.sm || \"12\",\n        md: input.md || \"12\",\n        lg: input.lg || \"12\",\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(FormCheckbox, {\n        id: key,\n        className: input.className,\n        style: input.inputStyle,\n        valid: input.valid,\n        invalid: input.invalid,\n        disabled: input.disabled,\n        checked: input.value,\n        onChange: e => this.props.onInputChange(!input.value, key),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }\n      }, input.label && /*#__PURE__*/React.createElement(\"span\", {\n        style: input.labelStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 25\n        }\n      }, input.label)));\n    }\n  }\n\n  formRadio(input, key) {\n    if (!input.hide) {\n      return /*#__PURE__*/React.createElement(Col, {\n        key: key,\n        sm: input.sm || \"12\",\n        md: input.md || \"12\",\n        lg: input.lg || \"12\",\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 17\n        }\n      }, input.label && /*#__PURE__*/React.createElement(\"label\", {\n        className: \"mb-2\",\n        style: input.labelStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 25\n        }\n      }, input.label, input.required && /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: \"red\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 61\n        }\n      }, \"*\")), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }\n      }, input.options.map((option, idx) => /*#__PURE__*/React.createElement(FormRadio, {\n        key: idx,\n        name: key,\n        style: input.inputStyle,\n        className: input.className,\n        valid: input.valid,\n        invalid: input.invalid,\n        inline: input.inline,\n        disabled: input.disabled || option.disabled,\n        checked: input.value === option.value,\n        onChange: () => this.props.onInputChange(option.value, key),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 25\n        }\n      }, option.label))));\n    }\n  }\n\n  formInputs() {\n    return /*#__PURE__*/React.createElement(Row, {\n      form: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 13\n      }\n    }, Object.keys(this.props.form).map(key => {\n      let inputData = this.props.form[key];\n      let input = this.state.inputs[inputData.typeInput];\n\n      if (input) {\n        return input(inputData, key);\n      }\n    }));\n  }\n\n  render() {\n    return this.props.onSubmit ? /*#__PURE__*/React.createElement(Form, {\n      autoComplete: this.props.autoComplete || \"on\",\n      onSubmit: this.props.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }\n    }, this.formInputs(), /*#__PURE__*/React.createElement(Row, {\n      form: true,\n      className: \"justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 21\n      }\n    }, this.props.onCancel && /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      block: true,\n      theme: \"danger\",\n      onClick: this.props.onCancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-times\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 43\n      }\n    }), \" \", this.props.cancelButtonText || \"Cancelar\"))), /*#__PURE__*/React.createElement(Col, {\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      block: true,\n      type: \"submit\",\n      theme: \"primary\",\n      disabled: this.props.awaitingSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 29\n      }\n    }, this.props.awaitingSubmit ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spinner-border spinner-border-sm\",\n      role: \"status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"sr-only\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 41\n      }\n    }, \"Loading...\")) : /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 43\n      }\n    }), \" \", this.props.submitButtonText || \"Salvar AlteraÃ§Ãµes\"))))) : this.formInputs();\n  }\n\n}\nGenericRegister.FORM_INPUT = \"input\";\nGenericRegister.FORM_TEXTAREA = \"textarea\";\nGenericRegister.FORM_SELECT = \"select\";\nGenericRegister.FORM_DATE_PICKER = \"datepicker\";\nGenericRegister.FORM_CHECKBOX = \"checkbox\";\nGenericRegister.FORM_RADIO = \"radio\";","map":{"version":3,"sources":["C:/git/matt-repository/security-system/squadra/template-reactjs/src/components/common/GenericRegister.js"],"names":["React","Row","Col","Button","Form","FormInput","FormSelect","FormCheckbox","FormRadio","FormTextarea","DatePicker","pt","registerLocale","setDefaultLocale","GenericRegister","Component","constructor","props","state","inputs","input","formInput","bind","textarea","formTextarea","select","formSelect","datepicker","formDatePicker","checkbox","formCheckbox","radio","formRadio","key","hide","sm","md","lg","label","labelStyle","required","color","valid","invalid","disabled","placeholder","className","inputStyle","type","value","e","onInputChange","target","rows","cols","maxLength","options","map","o","idx2","showYearDropdown","showMonthDropdown","showTimeSelect","dateFormat","timeFormat","timeIntervals","timeCaption","minDate","maxDate","date","option","idx","inline","formInputs","Object","keys","form","inputData","typeInput","render","onSubmit","autoComplete","onCancel","cancelButtonText","awaitingSubmit","submitButtonText","FORM_INPUT","FORM_TEXTAREA","FORM_SELECT","FORM_DATE_PICKER","FORM_CHECKBOX","FORM_RADIO"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {  \r\n    Row, \r\n    Col,\r\n    Button,\r\n\tForm,\r\n    FormInput,\r\n    FormSelect,\r\n    FormCheckbox,\r\n    FormRadio,\r\n    FormTextarea,\r\n    DatePicker\r\n} from \"shards-react\";\r\n\r\nimport pt from 'date-fns/locale/pt';\r\nimport { registerLocale, setDefaultLocale } from \"react-datepicker\";\r\n\r\nexport default class GenericRegister extends React.Component {\r\n    \r\n    static FORM_INPUT = \"input\";\r\n    static FORM_TEXTAREA = \"textarea\";\r\n    static FORM_SELECT = \"select\";\r\n    static FORM_DATE_PICKER = \"datepicker\";\r\n    static FORM_CHECKBOX = \"checkbox\";\r\n    static FORM_RADIO = \"radio\";\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            inputs: {\r\n                input: this.formInput.bind(this),\r\n                textarea: this.formTextarea.bind(this),\r\n                select: this.formSelect.bind(this),\r\n                datepicker: this.formDatePicker.bind(this),\r\n                checkbox: this.formCheckbox.bind(this),\r\n                radio: this.formRadio.bind(this),\r\n            }\r\n        }\r\n\r\n        registerLocale('pt', pt);\r\n        setDefaultLocale('pt');\r\n    }\r\n\r\n    formInput(input, key){\r\n        if (!input.hide) {\r\n            return (            \r\n                <Col key={key} sm={input.sm || \"12\"} md={input.md || \"12\"} lg={input.lg || \"12\"} className=\"form-group\">\r\n                    {input.label && (\r\n                        <label htmlFor={key} style={input.labelStyle}>\r\n                            {input.label}{input.required && <span style={{color:\"red\"}}>*</span>}\r\n                        </label>\r\n                    )}\r\n                    <FormInput\r\n                        id={key}\r\n                        valid={input.valid}\r\n                        invalid={input.invalid}\r\n                        required={input.required}\r\n                        disabled={input.disabled}\r\n                        placeholder={input.placeholder}\r\n                        className={input.className}\r\n                        style={input.inputStyle}\r\n                        type={input.type || \"text\"}\r\n                        value={input.value}\r\n                        onChange={(e) => this.props.onInputChange(e.target.value, key)}\r\n                    />\r\n                </Col>\r\n            )\r\n        }\r\n    }\r\n\r\n    formTextarea(input, key){\r\n        if (!input.hide) {\r\n            return (            \r\n                <Col key={key} sm={input.sm || \"12\"} md={input.md || \"12\"} lg={input.lg || \"12\"} className=\"form-group\">\r\n                    {input.label && (\r\n                        <label htmlFor={key} style={input.labelStyle}>\r\n                            {input.label}{input.required && <span style={{color:\"red\"}}>*</span>}\r\n                        </label>\r\n                    )}\r\n                    <FormTextarea\r\n                        id={key}\r\n                        valid={input.valid}\r\n                        invalid={input.invalid}\r\n                        required={input.required}\r\n                        disabled={input.disabled}\r\n                        placeholder={input.placeholder}\r\n                        className={input.className}\r\n                        style={input.inputStyle}\r\n                        rows={input.rows}\r\n                        cols={input.cols}\r\n                        maxLength={input.maxLength}\r\n                        value={input.value}\r\n                        onChange={(e) => this.props.onInputChange(e.target.value, key)}\r\n                    />\r\n                </Col>\r\n            )\r\n        }\r\n    }\r\n\r\n    formSelect(input, key){\r\n        if (!input.hide) {\r\n            return (      \r\n                <Col key={key} sm={input.sm || \"12\"} md={input.md || \"12\"} lg={input.lg || \"12\"} className=\"form-group\">\r\n                    {input.label && (\r\n                        <label htmlFor={key} style={input.labelStyle}>\r\n                            {input.label}{input.required && <span style={{color:\"red\"}}>*</span>}\r\n                        </label>\r\n                    )}\r\n                    <FormSelect\r\n                        id={key}\r\n                        valid={input.valid}\r\n                        invalid={input.invalid}\r\n                        required={input.required}\r\n                        disabled={input.disabled}\r\n                        placeholder={input.placeholder}\r\n                        className={input.className}\r\n                        style={input.inputStyle}\r\n                        value={input.value}\r\n                        onChange={(e) => this.props.onInputChange(e.target.value, key)}\r\n                    >\r\n                        <option value=\"\">Selecione</option>\r\n                        {input.options.map((o, idx2) => (\r\n                            <option key={idx2} value={o.value}>{o.label}</option>\r\n                        ))}\r\n                    </FormSelect>\r\n                </Col>\r\n            )\r\n        }\r\n    }\r\n\r\n    formDatePicker(input, key){\r\n        if (!input.hide) {\r\n            return (    \r\n                <Col key={key} sm={input.sm || \"12\"} md={input.md || \"12\"} lg={input.lg || \"12\"} className=\"form-group\">\r\n                    {input.label && (\r\n                        <label htmlFor={key} style={input.labelStyle}>\r\n                            {input.label}{input.required && <span style={{color:\"red\"}}>*</span>}\r\n                        </label>\r\n                    )}\r\n                    <DatePicker\r\n                        id={key}\r\n                        className={input.className}\r\n                        style={input.inputStyle}\r\n                        required={input.required}\r\n                        disabled={input.disabled}\r\n                        showYearDropdown={input.showYearDropdown}\r\n                        showMonthDropdown={input.showMonthDropdown}\r\n                        showTimeSelect={input.showTimeSelect}\r\n                        dateFormat={input.dateFormat || \"dd/MM/yyyy\"}\r\n                        timeFormat={input.timeFormat || \"HH:mm\"}\r\n                        timeIntervals={input.timeIntervals || 30}\r\n                        timeCaption={input.timeCaption || \"HorÃ¡rio\"}\r\n                        minDate={input.minDate}\r\n                        maxDate={input.maxDate}\r\n                        selected={input.value}\r\n                        onChange={(date) => this.props.onInputChange(date, key)}\r\n                    />    \r\n                </Col> \r\n            )\r\n        }\r\n    }\r\n\r\n    formCheckbox(input, key) {\r\n        if (!input.hide) {\r\n            return (\r\n                <Col key={key} sm={input.sm || \"12\"} md={input.md || \"12\"} lg={input.lg || \"12\"} className=\"form-group\">\r\n                    <FormCheckbox\r\n                        id={key}\r\n                        className={input.className}\r\n                        style={input.inputStyle}\r\n                        valid={input.valid}\r\n                        invalid={input.invalid}\r\n                        disabled={input.disabled}\r\n                        checked={input.value}\r\n                        onChange={(e) => this.props.onInputChange(!input.value, key)}\r\n                    >\r\n                    {input.label && (\r\n                        <span style={input.labelStyle}>{input.label}</span>\r\n                    )}\r\n                    </FormCheckbox>\r\n                </Col>\r\n            )\r\n        }\r\n    }\r\n\r\n    formRadio(input, key){\r\n        if (!input.hide) {\r\n            return (\r\n                <Col key={key} sm={input.sm || \"12\"} md={input.md || \"12\"} lg={input.lg || \"12\"} className=\"form-group\">\r\n                    {input.label && (\r\n                        <label className=\"mb-2\" style={input.labelStyle}>\r\n                            {input.label}{input.required && <span style={{color:\"red\"}}>*</span>}\r\n                        </label>\r\n                    )}\r\n                    <div>\r\n                    {input.options.map((option, idx) => (\r\n                        <FormRadio\r\n                            key={idx}\r\n                            name={key}\r\n                            style={input.inputStyle}\r\n                            className={input.className}\r\n                            valid={input.valid}\r\n                            invalid={input.invalid}\r\n                            inline={input.inline}\r\n                            disabled={input.disabled || option.disabled}\r\n                            checked={input.value === option.value}\r\n                            onChange={() => this.props.onInputChange(option.value, key)}\r\n                        >\r\n                            {option.label}\r\n                        </FormRadio>\r\n                    ))}\r\n                    </div>\r\n                </Col>\r\n            );\r\n        }\r\n    }\r\n\r\n    formInputs(){\r\n        return (\r\n            <Row form>\r\n                {Object.keys(this.props.form).map((key) => { \r\n                    let inputData = this.props.form[key];\r\n                    let input = this.state.inputs[inputData.typeInput];\r\n                    if(input){\r\n                        return input(inputData, key);\r\n                    }\r\n                })} \r\n            </Row>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.props.onSubmit ? (\r\n                <Form autoComplete={this.props.autoComplete || \"on\"} onSubmit={this.props.onSubmit}>\r\n                    {this.formInputs()}\r\n                    <Row form className=\"justify-content-center\">\r\n                        {this.props.onCancel && (\r\n                            <Col md=\"6\">\r\n                                <Button type=\"button\" block theme=\"danger\" onClick={this.props.onCancel}>\r\n                                    <span><i className=\"fas fa-times\"/> {this.props.cancelButtonText || \"Cancelar\"}</span>\r\n                                </Button>\r\n                            </Col>\r\n                        )}\r\n                        <Col md=\"6\">\r\n                            <Button block type=\"submit\" theme=\"primary\" disabled={this.props.awaitingSubmit}>\r\n                                {this.props.awaitingSubmit ? (\r\n                                    <div className=\"spinner-border spinner-border-sm\" role=\"status\">\r\n                                        <span className=\"sr-only\">Loading...</span>\r\n                                    </div>\r\n                                ) : (\r\n                                    <span><i className=\"fas fa-check\"/> {this.props.submitButtonText || \"Salvar AlteraÃ§Ãµes\"}</span>\r\n                                )}\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n            ) : (\r\n                this.formInputs()\r\n            )\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}