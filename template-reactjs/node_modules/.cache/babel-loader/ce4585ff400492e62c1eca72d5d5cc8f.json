{"ast":null,"code":"export default class RestApi {\n  static httpMethod(method, url, body) {\n    let init = {\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      method,\n      body: JSON.stringify(body)\n    };\n    return fetch(url, init).then(res => res.json());\n  }\n\n}\nRestApi.URL = \"http://localhost:54212/System\";\n\nRestApi.httpGet = url => fetch(url).then(res => res.json());\n\nRestApi.InsertSystem = body => RestApi.httpMethod(\"POST\", `${RestApi.URL}/InsertSystem`, body);\n\nRestApi.GetSystem = (description, initials, email) => RestApi.httpGet(`${RestApi.URL}/GetSystem?description=${description}&initials=${initials}&email=${email}`);\n\nRestApi.GetByID = id => RestApi.httpGet(`${RestApi.URL}/GetForEdit?id=${id}`);\n\nRestApi.UpdateSystem = (id, body) => RestApi.httpMethod(\"PUT\", `${RestApi.URL}/UpdateSystem?id=${id}`, body);\n\nRestApi.Authenticate = body => RestApi.httpMethod(\"POST\", `${RestApi.URL}/Authenticate`, body);","map":{"version":3,"sources":["C:/git/matt-repository/security-system/squadra/template-reactjs/src/module/RestApi.js"],"names":["RestApi","httpMethod","method","url","body","init","headers","Accept","JSON","stringify","fetch","then","res","json","URL","httpGet","InsertSystem","GetSystem","description","initials","email","GetByID","id","UpdateSystem","Authenticate"],"mappings":"AAAA,eAAe,MAAMA,OAAN,CAAa;AAKxB,SAAOC,UAAP,CAAkBC,MAAlB,EAA0BC,GAA1B,EAA+BC,IAA/B,EAAoC;AAChC,QAAIC,IAAI,GAAG;AACPC,MAAAA,OAAO,EAAE;AACLC,QAAAA,MAAM,EAAE,kBADH;AAEL,wBAAgB;AAFX,OADF;AAKPL,MAAAA,MALO;AAMPE,MAAAA,IAAI,EAAEI,IAAI,CAACC,SAAL,CAAeL,IAAf;AANC,KAAX;AAQA,WAAOM,KAAK,CAACP,GAAD,EAAME,IAAN,CAAL,CAAiBM,IAAjB,CAAuBC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAA/B,CAAP;AACH;;AAfuB;AAAPb,O,CACVc,G,GAAM,+B;;AADId,O,CAGVe,O,GAAWZ,GAAD,IAASO,KAAK,CAACP,GAAD,CAAL,CAAWQ,IAAX,CAAiBC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAAzB,C;;AAHTb,O,CAiBVgB,Y,GAAgBZ,IAAD,IAAUJ,OAAO,CAACC,UAAR,CAAmB,MAAnB,EAA4B,GAAED,OAAO,CAACc,GAAI,eAA1C,EAA0DV,IAA1D,C;;AAjBfJ,O,CAkBViB,S,GAAY,CAACC,WAAD,EAAcC,QAAd,EAAwBC,KAAxB,KAAkCpB,OAAO,CAACe,OAAR,CAAiB,GAAEf,OAAO,CAACc,GAAI,0BAAyBI,WAAY,aAAYC,QAAS,UAASC,KAAM,EAAxG,C;;AAlBpCpB,O,CAmBVqB,O,GAAWC,EAAD,IAAQtB,OAAO,CAACe,OAAR,CAAiB,GAAEf,OAAO,CAACc,GAAI,kBAAiBQ,EAAG,EAAnD,C;;AAnBRtB,O,CAoBVuB,Y,GAAe,CAACD,EAAD,EAAIlB,IAAJ,KAAaJ,OAAO,CAACC,UAAR,CAAmB,KAAnB,EAA2B,GAAED,OAAO,CAACc,GAAI,oBAAmBQ,EAAG,EAA/D,EAAkElB,IAAlE,C;;AApBlBJ,O,CAqBVwB,Y,GAAgBpB,IAAD,IAAUJ,OAAO,CAACC,UAAR,CAAmB,MAAnB,EAA4B,GAAED,OAAO,CAACc,GAAI,eAA1C,EAA0DV,IAA1D,C","sourcesContent":["export default class RestApi{\r\n    static URL = \"http://localhost:54212/System\";\r\n    \r\n    static httpGet = (url) => fetch(url).then((res) => res.json());\r\n\r\n    static httpMethod(method, url, body){\r\n        let init = {\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            method,\r\n            body: JSON.stringify(body)\r\n        };\r\n        return fetch(url, init).then((res) => res.json());\r\n    }\r\n    \r\n    static InsertSystem = (body) => RestApi.httpMethod(\"POST\", `${RestApi.URL}/InsertSystem`, body);\r\n    static GetSystem = (description, initials, email) => RestApi.httpGet(`${RestApi.URL}/GetSystem?description=${description}&initials=${initials}&email=${email}`);\r\n    static GetByID = (id) => RestApi.httpGet(`${RestApi.URL}/GetForEdit?id=${id}`);\r\n    static UpdateSystem = (id,body) => RestApi.httpMethod(\"PUT\", `${RestApi.URL}/UpdateSystem?id=${id}`, body);\r\n    static Authenticate = (body) => RestApi.httpMethod(\"POST\", `${RestApi.URL}/Authenticate`, body);\r\n}"]},"metadata":{},"sourceType":"module"}